{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectedTodoId","className","map","todo","data-cy","classNames","id","completed","title","type","onClick","TodoFilter","complitedFilter","setComplitedFilter","searchQuery","setSearchQuery","value","onChange","event","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","setSelectedTodoId","todosFromServer","filterList","useCallback","list","todoList","filter","todoItem","includes","visiableTodos","useMemo","selectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa591088.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId: number | null;\n  onSelectedTodoId: (id: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = (\n  { todos, selectedTodoId, onSelectedTodoId },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodoId === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  complitedFilter: string,\n  setComplitedFilter: (filter: string) => void,\n  searchQuery: string,\n  setSearchQuery: (query:string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    complitedFilter, setComplitedFilter, searchQuery, setSearchQuery,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={complitedFilter}\n          onChange={(event) => setComplitedFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(event) => setSearchQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchQuery.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setSearchQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onClose: (v: number | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = (\n  { todo, onClose },\n) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(user => setSelectedUser(user));\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [complitedFilter, setComplitedFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const filterList = useCallback(\n    (list: Todo[]) => {\n      let todoList = list.filter(todoItem => todoItem.title.includes(searchQuery));\n\n      switch (complitedFilter) {\n        case 'all': break;\n        case 'completed': todoList = todoList.filter(todoItem => todoItem.completed); break;\n        case 'active': todoList = todoList.filter(todoItem => !todoItem.completed); break;\n        default: break;\n      }\n\n      return todoList;\n    }, [complitedFilter, searchQuery],\n  );\n\n  const visiableTodos = useMemo(() => (\n    filterList(todos)\n  ), [todos, complitedFilter, searchQuery]);\n\n  const selectedTodo = useMemo(() => (\n    todos.find(todo => todo.id === selectedTodoId) || null\n  ), [selectedTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                complitedFilter={complitedFilter}\n                setComplitedFilter={setComplitedFilter}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={visiableTodos}\n                selectedTodoId={selectedTodoId}\n                onSelectedTodoId={setSelectedTodoId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} onClose={setSelectedTodoId} />}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}